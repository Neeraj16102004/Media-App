üöÄ Setup Steps
1Ô∏è‚É£ Prerequisites

Make sure you have installed:

Docker üê≥

Docker Compose

Git (if you want to clone the repo)

Java 23 & Maven (only if you plan to run locally without Docker)

2Ô∏è‚É£ Clone the project
git clone https://github.com/Neeraj16102004/Media-App
cd media_app

3Ô∏è‚É£ Environment setup

Copy the example env file and adjust values:

cp .env.example .env


‚úèÔ∏è Edit .env if needed (DB password, Redis host, etc).
Default values:

SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/media_app
SPRING_DATASOURCE_USERNAME=postgres
SPRING_DATASOURCE_PASSWORD=postgres
SPRING_JPA_HIBERNATE_DDL_AUTO=update
SPRING_JPA_SHOW_SQL=true

REDIS_HOST=redis
REDIS_PORT=6379

4Ô∏è‚É£ Build & Run with Docker
üîπ Option A: Build and run manually
# Build docker image
docker build -t media_app .

# Run container (will use default .env values)
docker run -p 8080:8080 --env-file .env media_app

üîπ Option B: Use docker-compose (recommended)
docker-compose up --build


This starts:

media_app (Spring Boot backend) ‚Üí http://localhost:8080

db (PostgreSQL) on port 5432

redis on port 6379

5Ô∏è‚É£ Verify setup

Check logs:

docker logs media_app


API health check:

curl http://localhost:8080/actuator/health


Swagger (if enabled):

http://localhost:8080/swagger-ui.html

6Ô∏è‚É£ Running Tests (outside Docker)

If you want to run tests before packaging:

mvn clean test


üëâ Inside Docker, tests are skipped during image build (-DskipTests).

7Ô∏è‚É£ Stopping containers
docker-compose down


Add -v to remove volumes (‚ö†Ô∏è deletes DB data):

docker-compose down -v